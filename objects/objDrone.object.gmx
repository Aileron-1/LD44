<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDrone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>altitude = 50;// y to hover at
y = altitude;
altThreshold = 20;
hover = 0.2; // hover accel

x_v = -1.5;
y_v = 0;

grav = 0.1;

hp = 1;

bombs = 3;
bTimer = 5;
efTimer = 5;

toDrawX = ds_map_create();
toDrawY = ds_map_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &gt; 0) {
    if (y &gt; altitude+altThreshold) y_v -= hover;

    if (instance_exists(objPlayer)) {
        target = objPlayer.x+(objControl.xVelocity*32)
        if (abs(x-target) &lt; 100) {
        if (bombs &gt; 0){
            bTimer -= 1;
            if (bTimer &lt;= 0) {
                var b = instance_create(x+40-(bombs*20) ,y+30,objBomb);
                b.y_v = 2;
                b.x_v -= 1;
                bombs -= 1;
                bTimer = 10;
            }
        }}
    }
    
    if (bombs &lt;= 0) {
        altitude = -200;
        if (y &lt; -200) {
            instance_destroy();
        }
    }
    
    explosion = instance_place(x,y,objExplosion);
    if (explosion) {
        hp -= 5;
        grav = 0.2;
        image_angle = irandom(20)-10;
    }
}
if (hp &lt;= 0) {
    efTimer -= 1;
    if (efTimer &lt;= 0) {
        effect_create_above(ef_smoke, x+random(10)-5, y, choose(0, 1, 2), choose(c_gray,c_white));
        efTimer = 5;
    }
}
    
y_v += grav;

x += x_v;
y += y_v;


if (y &gt; objControl.y) {
    instance_create(x,y,objExplosionAesthetic);
    repeat(1+irandom(5)) { instance_create(x,y,objScrap); }
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprDroneBombs,bombs,x,y,1,1,image_angle,c_white,1);
/*
for (var i=0; i&lt;ds_list_size(toDrawX); i++) {
    draw_circle(toDrawX[|i],toDrawY[|i],2,0);
}*/
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
