<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPerson</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 3;
origSprite = sprite_index;

x_v = 0;
y_v = 0;
fric = 0.1;
grav = 0.3;
moveSpeed = 1;
topSpeed = 2;
dir = -1;

hp = 1;

ai = 0;
fireRange = 180+irandom(150)
retreatRange = 100+irandom(50)

dieTimer = 0;
gunCharge = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Facing
image_xscale = dir;//sign(walking);

// Hit
if (hp &gt; 0) {   
    explosion = collision_point(x,y,objExplosion,1,0);
    if (explosion) {
        hp -= 5;
        image_angle = irandom(360);
        if (y == objControl.y) {
            vectorA = point_distance(x,y,explosion.x,explosion.y)//explosion.sprite_width/point_distance(x,y,explosion.x,explosion.y)*6;
            vectorD = point_direction(explosion.x,explosion.y,x,y+60);
            x_v += dcos(vectorD)*vectorA;
            y_v += dsin(vectorD)*vectorA;
        }
    }
}
// Move
if (hp &gt; 0) {    
    if (y == objControl.y) {
        if (abs(x_v) &gt; 0) image_speed = 1;
    }
    
    if (objPlayer) {
        if (abs(x-objPlayer.x) &gt; fireRange) {
            dir = sign(objPlayer.x-x);
            if (abs(x_v) &lt; topSpeed) x_v += moveSpeed*dir;
            ai = 0;  // default
            gunCharge = 0;
        }
        if (abs(x-objPlayer.x) &lt; retreatRange) {
            dir = sign(x-objPlayer.x);
            ai = 1;  // run
        }
        if (abs(x-objPlayer.x) &lt;= fireRange) {
            if (abs(x_v) &lt;= 0.6) {
                gunCharge += 1;
            }
        }
        
    }
    if (ai == 1) {
        if (abs(x_v) &lt; topSpeed) x_v += moveSpeed*dir;
    }
    
    if (gunCharge &gt; 15) {
        var m = instance_create(x,y,objMuzzleflash);
        m.x_scale = dir;
        gunCharge = 0-irandom(15)
    }
}

if (y &lt; objControl.y) {
    y_v += grav;
}



x_v = x_v-sign(x_v)*fric;
y_v = y_v-sign(y_v)*fric;

var limit = 10;
if (abs(x_v) &gt; limit) x_v = limit*sign(x_v);
if (abs(y_v) &gt; limit) y_v = limit*sign(y_v);
if (abs(x_v) &lt; moveSpeed) x_v = 0;

x += x_v; 
y += y_v;

if (y &gt; objControl.y) y = objControl.y;

// Sprite states on hp and aerial
if (hp &lt;= 0) {
    if (y &lt; objControl.y) {
        sprite_index = sprPersonDieAir
    }
    else {
        sprite_index = sprCorpse;
        //var lieAng = choose(0,180);
        image_angle = 0//lieAng;
        dieTimer += 1;
    }
}

if (dieTimer &gt; 60) instance_destroy();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dieTimer mod 5 &lt; 2) {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
