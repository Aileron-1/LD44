<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-90</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>margins = 20;

buttonBack = instance_create(640/2,360-margins-40,objButton);
buttonBack.label = "Back";

area = 640-margins*6;
button[0] = instance_create(640/4, 200, objButton);
button[1] = instance_create(2*(640/4), 200, objButton);
button[2] = instance_create(3*(640/4), 200, objButton);
button[0].label = 'Buy';
button[1].label = 'Buy';
button[2].label = 'Buy';
alarm[0] = 1;


unafford[0] = 0;
unafford[1] = 0;
unafford[2] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(buttonBack);
instance_destroy(button[0]);
instance_destroy(button[1]);
instance_destroy(button[2]);
objShop.purchased = purchased;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i = 0;
button[i].yy -= 300*purchased[i]; i++;
button[i].yy -= 300*purchased[i]; i++;
button[i].yy -= 300*purchased[i];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=0; i&lt;array_length_1d(button); i++) {
    if (objControl.hp &lt;= prices[|i]) {
        unafford[i] = 1;
        button[i].y = -300;  // super hacky but easy I guess :)
        button[i].yy = -300;
    }
    if (button[i].trigger == 1) {
        if (objControl.hp &gt; prices[|i]) {
            objControl.hp -= prices[|i];
            purchased[i] = 1;
            button[i].y = -300;
            button[i].yy = -300;
            switch (items[|i]) {
                case 'Acceleration':
                    objControl.accelMod += 0.2;
                break;
                case 'Top speed':
                    objControl.topSpdMod += 0.2;
                break;
                case 'Projectile Velocity':
                    objControl.muzVelo += 0.2;
                break;
                case 'Explosion Size':
                    objControl.expAmt += 0.2;
                break;
                case 'Reload speed':
                    objControl.reloadMod += 0.2;
                break;
            }
        }
        button[i].trigger = 0;
    }
}
if (buttonBack.trigger == 1) {
    buttonBack.trigger = 0;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(0.95);
draw_rectangle(margins+view_xview[0],margins,640-margins+view_xview[0],360-margins,0);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_white);
draw_set_font(font2);
draw_text(640/2+view_xview[0],margins+55,'Shop');

draw_set_font(font0);
for (var i=0; i&lt;array_length_1d(button); i++) {
    draw_set_color(c_white);
    
    draw_text(button[i].x,200-64,'+20% '+string(items[|i]));
    draw_text(button[i].x,200-64,'+20% '+string(items[|i]));
    draw_text(button[i].x,200-64,'+20% '+string(items[|i])); 

    draw_text(button[i].x,200-40,'Cost: '+string(prices[|i])+' hull');
    draw_text(button[i].x,200-40,'Cost: '+string(prices[|i])+' hull');
    draw_text(button[i].x,200-40,'Cost: '+string(prices[|i])+' hull');
    
    if (purchased[i] == 1) {
        draw_set_color(c_yellow);
        draw_text(button[i].x,200,'Purchased!');
    }
    else if (unafford[i] == 1) { 
        draw_set_color(c_gray);
        draw_text(button[i].x,200,'Cannot Afford');
    }
}

draw_set_halign(fa_right);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_set_font(font1);
draw_text(640+view_xview[0]-margins-20,margins+20,'Hull: '+string(objControl.hp));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
