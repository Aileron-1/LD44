<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>marginLeft = 12;
marginTop = 12;
    hbx = 640/2;
    hby = 300;
    hbw = 640/10;
    hbh = 20/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Tutorial draw
if (room == room0) {
draw_set_font(font0);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);

var yOff = -6;
var vInterval = 34;
vIndex = 0;
var interval = 34;
var index = 0;
draw_sprite(sprKeys,0,marginLeft+interval*index,marginTop);
index++;
draw_sprite(sprKeys,1,marginLeft+interval*index,marginTop);
index++;
draw_text(marginLeft+interval*index+8,marginTop+vInterval/2+yOff,'Turn Turret');
index = 0;
vIndex++;
draw_sprite(sprKeys,2,marginLeft+interval*index,marginTop+vInterval*vIndex);
index++;
draw_text(marginLeft+interval*index+8,marginTop+vInterval*vIndex+vInterval/2+yOff,'Shoot');
/*index = 0;
vIndex++;
draw_sprite(sprKeys,3,marginLeft+interval*index,marginTop+vInterval*vIndex);
index++;
draw_text(marginLeft+interval*index+8,marginTop+vInterval*vIndex+vInterval/2+yOff,'Change Ammo Type');
*/index = 0;
vIndex++;
draw_sprite(sprKeys,4,marginLeft+interval*index,marginTop+vInterval*vIndex);
index++;
draw_sprite(sprKeys,7,marginLeft+interval*index,marginTop+vInterval*vIndex);
index++;
draw_text(marginLeft+interval*index+8,marginTop+vInterval*vIndex+vInterval/2+yOff,'Move');
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objShopUI)){

pc = (objControl.hp/objControl.maxHp)*100;
draw_healthbar(hbx-hbw,hby-hbh,hbx+hbw,hby+hbh,pc, c_black, c_red, c_lime, 0, true, true);

draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_set_font(font2);
draw_text(hbx,hby+hbh+3,'Hull: '+string(objControl.hp)+'/'+string(objControl.maxHp));

draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_set_font(font0);
str = "";
if (objControl.nextLevel == 0) str="Regular level";
if (objControl.nextLevel == 1) str="Hard level";
if (objControl.nextLevel == 2) str="Shop level";
if (objControl.nextLevel == -1) str="New stage";
draw_text(hbx,5,'Next: '+str);


/*draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_set_font(font2);
draw_text(20,hby+hbh+3,'Scrap: '+string(objControl.scrap));*/

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
